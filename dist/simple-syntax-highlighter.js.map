{"version":3,"file":"simple-syntax-highlighter.js","sources":["../src/components/simpleSyntaxHighlighter.vue","../src/index.js"],"sourcesContent":["<template>\n  <pre class=\"ssh-pre\" v-html=\"content\" :data-type=\"language\" :data-label=\"label\"></pre>\n</template>\n\n<script>\nconst regexBasics = {\n  quote: /(\"(?:\\\\\"|[^\"])*\")|('(?:\\\\'|[^'])*')/, // Match simple and double quotes by pair.\n  comment: /(\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/)/, // Comments blocks (/* ... */) or trailing comments (// ...).\n  htmlTag: /(<([^>])*>)/,\n  punctuation: /(!==?|(?:[[\\](){}.:;,+\\-?=]|&lt;|&gt;)+|&&|\\|\\|)/, // punctuation not in html tag.\n  number: /(-?(?:\\.\\d+|\\d+(?:\\.\\d+)?))/,\n  boolean: /\\b(true|false)\\b/\n}\n\n// The html tags names, attribute and inner special chars are treated inside the\n// htmlTag regex above because javascript does not support lookbehind.\nconst dictionary = {\n  shell: {\n    quote: regexBasics.quote,\n    comment: /(#.*?)\\n/,\n    keyword: /(?:^|\\b)(npm|yarn|install|run)(?:\\b|$)/,\n    param: /( --(?:save|save-dev))(?:\\s|$)/\n  },\n  xml: {\n    quote: regexBasics.quote,\n    comment: /(&lt;!--[\\s\\S]*?--&gt;)/,\n    tag: /(&lt;\\/?)([a-zA-Z\\-:]+)(.*?)(\\/?&gt;)/\n  },\n  html: {\n    quote: regexBasics.quote,\n    comment: /(&lt;!--[\\s\\S]*?--&gt;)/,\n    tag: /(&lt;\\/?)([a-z]\\w*)(.*?)(\\/?&gt;)/\n  },\n  'html-vue': {\n    quote: regexBasics.quote,\n    comment: /(&lt;!--[\\s\\S]*?--&gt;)/,\n    tag: /(&lt;\\/?)([a-z][a-z_-]*)((?:.|\\s)*?)(\\/?&gt;)/\n  },\n  css: {\n    quote: regexBasics.quote,\n    comment: /(\\/\\*[\\s\\S]*?\\*\\/)/,\n    pseudo: /(:(?:hover|active|focus|visited|before|after|(?:first|last|nth)-child))/,\n    'selector keyword vendor': /(@-(?:moz|o|webkit|ms)-(?=keyframes\\s))/,\n    'selector keyword': /((?:@(?:import|media|font-face|keyframes)|screen|print|and)(?=[\\s({])|keyframes|\\s(?:ul|ol|li|table|div|pre|p|a|img|br|hr|h[1-6]|em|strong|span|html|body|iframe|video|audio|input|button|form|label|fieldset|small|abbr|i|dd|dt)\\b)/,\n    selector: /((?:[.#-\\w\\*+ >:,\\[\\]=\"~\\n]|&gt;)+)(?=\\s*\\{)/, // Any part before '{'.\n    'attribute keyword vendor': /(-(?:moz|o|webkit|ms)-(?=transform|transition|user-select|animation|background-size|box-shadow))/,\n    'attribute keyword': /\\b(content|float|display|position|top|left|right|bottom|(?:(?:max|min)-)?width|(?:(?:max|min|line)-)?height|font(?:-(?:family|style|size|weight|variant|stretch))?|vertical-align|color|opacity|visibility|z-index|transform(?:-(?:origin|style|delay|duration|property|timing-function))?|transition(?:-(?:delay|duration))?|animation(?:-(?:name|delay|duration|direction|fill-mode))?|background(?:-(?:color|position|image|repeat|size))?|(?:padding|margin|border)(?:-(?:top|left|right|bottom))?|border(?:-radius)|white-space|text-(?:align|transform|decoration|shadow|indent)|overflow(?:-(?:x|y))?|(?:letter|word)-spacing|word-break|box-(?:sizing|shadow)|stroke(?:-(?:width|opacity|dasharray|dashoffset|linecap|linejoin))?|fill|speak|outline|user-select|cursor)(?=\\s*:)/,\n    'value keyword vendor': /(-(?:moz|o|webkit|ms)-(?=linear-gradient))/,\n    'value keyword important': /( ?\\!important)/,\n    'value keyword': /\\b(inline-block|inline|block|absolute|relative|static|fixed|inherit|initial|normal|none|auto|hidden|visible|top|left|right|bottom|center|middle|baseline|solid|dotted|dashed|(?:pre-|no)?wrap|pre|break-word|(?:upper|lower)case|capitalize|italic|bold|linear(?:-gradient)?|ease(?:-in)?(?:-out)?|all|infinite|cubic-bezier|(?:translate|rotate)(?:[X-Z]|3d)?|skew[XY]?|scale|(?:no-)?repeat|repeat(?:-x|-y)|contain|cover|!important|url|inset|pointer|flex)(?=\\s*[,;}(]|\\s+[\\da-z])/,\n    number: regexBasics.number,\n    color: /(transparent|#(?:[\\da-fA-F]{6}|[\\da-fA-F]{3})|rgba?\\([\\d., ]*\\))/,\n    // punctuation: /([:,;{}@#()]+)/,// @todo Why can't use this one if text contains '<' or '>' ??\n    htmlentity: /(&.*?;)/,\n    punctuation: /([:,;{}@#()]+|&lt;|&gt;)/,\n    attribute: /([a-zA-Z-]+)(?=\\s*:)/,\n    unit: /(px|pt|%|r?em|m?s|deg|vh|vw|vmin|vmax)(?=(?:\\s*[;,{}}\\)]|\\s+[\\-\\da-z#]))/\n  },\n  json: {\n    quote: regexBasics.quote,\n    comment: regexBasics.comment,\n    number: regexBasics.number,\n    boolean: regexBasics.boolean,\n    punctuation: /([[\\](){}:;,-]+)/// Override default to simplify.\n  },\n  js: {\n    quote: regexBasics.quote,\n    comment: regexBasics.comment,\n    number: /\\b(\\d+(?:\\.\\d+)?|null)\\b/,\n    boolean: regexBasics.boolean,\n    this: /\\b(this)(?=\\W)/,\n    keyword: /\\b(new|getElementsBy(?:Tag|Class|)Name|getElementById|arguments|if|else|do|return|case|default|function|typeof|undefined|instanceof|document|window|while|for|forEach|switch|in|break|continue|length|var|let|const|export|import|require|from|Number|Boolean|String|Array|Object|(?:clear|set)(?:Timeout|Interval)|Math(?=\\.)|Date)(?=\\W)/,\n    punctuation: /(!==?|(?:[[\\](){}:;,+\\-%*/?=]|&lt;|&gt;)+|\\.+(?![a-zA-Z])|&amp;&amp;|\\|\\|)/, // Override default since '.' can be part of js variable.\n    variable: /(\\.?[a-zA-Z]\\w*)/,\n    htmlentity: /(&.*?;)/,\n    dollar: /(\\$|jQuery)(?=\\W|$)/// jQuery or $.\n  },\n  php: {\n    quote: regexBasics.quote,\n    comment: regexBasics.comment,\n    punctuation: regexBasics.punctuation,\n    number: regexBasics.number,\n    boolean: regexBasics.boolean,\n    keyword: /\\b(define|echo|die|print_r|var_dump|if|else|do|return|case|default|function|\\$this|while|for|switch|in|break|continue)(?=\\W|$)/,\n    variable: /(?:(?=\\W))(\\$\\w+)/\n  },\n  sql: {\n    quote: regexBasics.quote,\n    comment: regexBasics.comment,\n    punctuation: regexBasics.punctuation,\n    number: /\\b(\\d+(?:\\.\\d+)?|null)\\b/,\n    boolean: regexBasics.boolean,\n    keyword: /\\b(\\*|CREATE|ALL|DATABASE|TABLE|GRANT|PRIVILEGES|IDENTIFIED|FLUSH|SELECT|UPDATE|DELETE|INSERT|FROM|WHERE|(?:ORDER|GROUP) BY|LIMIT|(?:(?:LEFT|RIGHT|INNER|OUTER) |)JOIN|AS|ON|COUNT|CASE|TO|IF|WHEN|BETWEEN|AND|OR|CONCAT)(?=\\W|$)/\n  }\n}\n\nconst attributesRegex = {\n  xml: /(\\s*)([a-zA-Z\\-:]+)=(\"|')(.*?)\\3/g,\n  html: /(\\s*)([a-zA-Z\\-]+)=(\"|')(.*?)\\3/g,\n  'html-vue': /(\\s*)(:?[a-zA-Z\\-]+)(?:(?:=(\"|')(.*?)\\3)|)/g\n}\n\nexport default {\n  name: 'ssh-pre',\n  props: {\n    language: {\n      type: String,\n      default: ''\n    },\n    label: {\n      type: [String, Boolean],\n      default: false\n    }\n  },\n  data: () => ({\n    knownLanguages: Object.keys(dictionary),\n    content: ''\n  }),\n  methods: {\n    htmlize (string) {\n      return string.replace(/&(lt|gt|amp);/g, (m0, m1) => ({ lt: '<', gt: '>', amp: '&' }[m1]))\n    },\n    unhtmlize (string) {\n      return string.replace(/[<>]/g, m => ({ '<': '&lt;', '>': '&gt;' }[m]))\n    },\n    isColorDark (colorString) {\n      let rgbColor, hexColor, rDark, gDark, bDark, alphaLow\n\n      if ((rgbColor = colorString.match(/rgba?\\((.*),\\s*(.*),\\s*(.*?)(?:,\\s*([^)]*))\\)/))) {\n        rDark = parseInt(rgbColor[1]) <= 100\n        gDark = parseInt(rgbColor[2]) <= 100\n        bDark = parseInt(rgbColor[3]) <= 100\n        alphaLow = parseFloat(rgbColor[4]) < 0.3\n      } else if ((hexColor = colorString.match(/#([\\da-f]{3}(?:[\\da-f]{3})?)/))) {\n        let has3chars = hexColor[1].length === 3\n        rDark = parseInt(hexColor[1][0]) <= 9\n        gDark = parseInt(hexColor[1][has3chars ? 1 : 2]) <= 9\n        bDark = parseInt(hexColor[1][has3chars ? 2 : 4]) <= 9\n      }\n\n      // #00f blue is also a dark color...\n      return ((rDark && gDark && bDark) || (rDark && gDark && !bDark) || (!rDark && gDark && bDark)) && !alphaLow\n    },\n    // Create a single regex pattern from assembling the regex pieces of the selected language.\n    // This regex pattern will be used all at once for the string replacement.\n    createRegexPattern (string) {\n      let pattern = ''\n      let classMap = []\n\n      for (let Class in dictionary[this.language]) {\n        classMap.push(Class)\n\n        if (Class === 'quote') {\n          // Add twice because 2 captures are made in the quote regexp.\n          classMap.push(Class)\n        }\n\n        if (['xml', 'html', 'html-vue'].indexOf(this.language) > -1 && Class === 'tag') {\n          classMap.push(Class, Class, Class)\n        }\n\n        pattern += (pattern ? '|' : '') + dictionary[this.language][Class].source\n      }\n\n      return [pattern, classMap]\n    },\n    syntaxHighlightHtmlTag (dictionaryMatches) {\n      let tagPieces = dictionaryMatches.slice(3)\n\n      // Converts every html attribute with syntax highlighting, e.g:\n      // ` class=\"my-class\"` => ` <span class=\"attribute\">class</span><span class=\"punctuation\">=</span><span class=\"quote\">\"my-class\"</span>`,\n      // ` checked` => ` <span class=\"attribute\">checked</span><span class=\"punctuation\">=</span><span class=\"quote\">\"my-class\"</span>`.\n      let renderAttributesList = function () {\n        return (\n          // `attribute-name`\n          `${arguments[1]}<span class=\"attribute\">${arguments[2]}</span>` +\n          // `=`\n          (arguments[4] ? `<span class=\"punctuation\">=</span>` : '') +\n          // `\"attribute value\"`\n          (arguments[4] ? `<span class=\"quote\">${arguments[3] || ''}${arguments[4] || ''}${arguments[3] || ''}</span>` : '')\n        )\n      }\n      let attributesList = (tagPieces[2] || '').replace(attributesRegex[this.language], renderAttributesList)\n\n      // Considering these 3 possible captures of html tags:\n      // `<tag-name attrs>` or `<tag-name attrs />` or `</tag-name>`,\n      return (\n        // Will be the tag opening: `</` or `<`.\n        `<span class=\"punctuation\">${tagPieces[0]}</span>` +\n        // Will be the tag-name + attributes list if any.\n        `<span class=\"tag-name\">${tagPieces[1]}</span>` + attributesList +\n        // Will be the tag end `>` or `/>`.\n        `<span class=\"punctuation\">${tagPieces[3]}</span>`\n      )\n    },\n    syntaxHighlightContent (string) {\n      // Only proceed if the language is supported.\n      if (this.knownLanguages.indexOf(this.language) > -1) {\n        let [regexPattern, classMap] = this.createRegexPattern()\n\n        string = this.unhtmlize(string).replace(new RegExp(regexPattern, 'g'), (...args) => {\n          let match, Class\n\n          // \"arguments.length - 2\" because the function is called with arguments like so:\n          // function(strMatch, c1, c2, ..., cn, matchOffset, sourceString){}. With c = the captures.\n          let dictionaryMatches = Array.prototype.slice.call(args, 1, args.length - 2)\n          for (let i = 0; i < dictionaryMatches.length; i++) {\n            if (dictionaryMatches[i]) {\n              match = dictionaryMatches[i]\n              Class = classMap[i]\n              break\n            }\n          }\n\n          if (Class === 'quote') match = this.unhtmlize(args[1] || args[2])\n          if (Class === 'comment') match = this.unhtmlize(match)\n          if (Class === 'tag' && ['xml', 'html', 'html-vue'].indexOf(this.language) > -1) {\n            return this.syntaxHighlightHtmlTag(dictionaryMatches)\n          }\n\n          if (Class === 'variable' && match[0] === '.' && this.language === 'js') {\n            /**\n             * @todo don't apply variable color if char before '.' is not '\\w'.\n             */\n            return `<span class=\"punctuation\">.</span><span class=\"objAttr\">${match.substr(1)}</span>`\n          }\n\n          let styles = ''\n          if (Class === 'color' && this.language === 'css') {\n            styles = ` style=\"background-color: ${match};color: #${this.isColorDark(match) ? 'fff' : '000'}\"`\n          }\n\n          return `<span class=\"${Class}\"${styles}>${match}</span>`\n        })\n      }\n\n      return string\n    }\n  },\n  created () {\n    (this.$slots.default || []).forEach(pieceOfCode => {\n      if (pieceOfCode.text) {\n        this.content += pieceOfCode.text\n      }\n    })\n    this.content = this.syntaxHighlightContent(this.content)\n  }\n}\n</script>\n\n<style lang=\"scss\">\npre.ssh-pre {\n  position: relative;\n  padding: 0.5em;\n  margin: 2.5em 0 2em;\n  border: 1px solid rgba(0, 0, 0, 0.06);\n  background-color: rgba(0, 0, 0, 0.025);\n  border-radius: 4px;\n  display: block;\n  white-space: pre-wrap;\n  word-break: break-word;\n\n  &[data-label]:before {\n    content: attr(data-label);\n    position: absolute;\n    bottom: 100%;\n    right: 1em;\n    padding: 0.1em 0.5em;\n    background-color: #f8f8f8;\n    border: 1px solid rgba(0, 0, 0, 0.06);\n    border-bottom: none;\n    border-radius: 3px;\n    margin-bottom: -1px;\n    font-size: 11px;\n  }\n\n  /* Syntax highlighting */\n  .txt {color: #333;}\n  .comment {font-style: italic;color: #aaa;}\n  .comment * {color: #aaa !important;}\n  .quote {color: #c11;}\n  .quote * {color: #c11 !important;}\n  .number {color: #c11;}\n  .boolean {color: #c11;}\n  .keyword {color: #33c;font-weight: bold;}\n  .this {color: #c6d;font-weight: bold;}\n  .punctuation {color: #99f;}\n  .dollar,\n  .special {color: #f63;}\n  .variable {color: #29e;}\n  .objAttr {color: #0bc;}\n\n  &[data-type=\"shell\"] .keyword {color: #ff5252;}\n  &[data-type=\"shell\"] .param {color: #f63;}\n\n  &[data-type=\"html\"] .tag-name {color: #11c;}\n  &[data-type=\"html\"] .attribute {color: #f63;}\n\n  &[data-type=\"html-vue\"] .tag-name {color: #42b983;}\n  &[data-type=\"html-vue\"] .punctuation {color: #128953;}\n  &[data-type=\"html-vue\"] .attribute {color: #ff5252;}\n\n  &[data-type=\"xml\"] .tag-name {color: #11c;}\n  &[data-type=\"xml\"] .attribute {color: #f93;}\n\n  &[data-type=\"css\"] .selector {color: #f0d;}\n  &[data-type=\"css\"] .selector.class-id {color: #f0d;}\n  &[data-type=\"css\"] .pseudo {color: #f35;}\n  &[data-type=\"css\"] .selector.keyword {color: #f5f;}\n  &[data-type=\"css\"] .selector.keyword.vendor {color: #0c8;}\n  &[data-type=\"css\"] .keyword {color: #c06;}\n  &[data-type=\"css\"] .attribute {color: #70d;}\n  &[data-type=\"css\"] .attribute.keyword {color: #e28;}\n  &[data-type=\"css\"] .attribute.keyword.vendor {color: #0c8;}\n  &[data-type=\"css\"] .value {color: #c11;}\n  &[data-type=\"css\"] .value.vendor {color: #0c8;}\n  &[data-type=\"css\"] .color {background: #eee;padding: 0px 3px;border: 1px solid rgba(0,0,0,.1);border-radius: 3px;}\n  &[data-type=\"css\"] .unit {color: #0bc;}\n  &[data-type=\"css\"] .important {color: #f00;font-weight: bold;}\n}\n</style>\n","import simpleSyntaxHighlighter from './components/simpleSyntaxHighlighter.vue'\n\n// Expose component to global scope.\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.component('simple-syntax-highlighter', simpleSyntaxHighlighter)\n}\n\nexport { simpleSyntaxHighlighter }\n"],"names":["regexBasics","dictionary","quote","number","comment","boolean","punctuation","attributesRegex","render","String","Boolean","Object","keys","string","replace","m0","m1","lt","gt","amp","m","colorString","rgbColor","hexColor","rDark","gDark","bDark","alphaLow","match","parseInt","parseFloat","has3chars","length","pattern","classMap","Class","language","push","indexOf","source","dictionaryMatches","tagPieces","slice","renderAttributesList","arguments","attributesList","knownLanguages","createRegexPattern","regexPattern","unhtmlize","RegExp","args","Array","prototype","call","i","syntaxHighlightHtmlTag","substr","styles","isColorDark","$slots","default","forEach","pieceOfCode","text","content","syntaxHighlightContent","window","Vue","component","simpleSyntaxHighlighter"],"mappings":"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"}